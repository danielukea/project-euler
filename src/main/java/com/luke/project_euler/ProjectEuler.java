package com.luke.project_euler;

import java.io.PrintStream;

/**
 * Runner for all of Project Euler Questions
 * @author ladan
 *
 */
public class ProjectEuler {
	
	/**
	 * Runs all problems and outputs to Standard output stream
	 * @param args
	 */
	public static void main(String[] args) {
		String FORMAT = "The answer to Problem %d is: %d\n";
		PrintStream p = new PrintStream(System.out);
		
		p.printf(FORMAT, 1,problemOne(1000));
		p.printf(FORMAT, 2,problemTwo(4000000));
		
	}

	/**
	 * If we list all the natural numbers below 10 that are multiples of 3 or 5, we
	 * get 3, 5, 6 and 9. The sum of these multiples is 23.
	 * 
	 * Find the sum of all the multiples of 3 or 5 below 1000.
	 * 
	 * @param input
	 * @return
	 */
	public static int problemOne(int input) {

		return Utilities.sumOfMultipleMultiplesUnder(input, 5, 3);
	}

	/**
	 * Each new term in the Fibonacci sequence is generated by adding the previous
	 * two terms. By starting with 1 and 2, the first 10 terms will be:
	 * 
	 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
	 * 
	 * By considering the terms in the Fibonacci sequence whose values do not exceed
	 * four million, find the sum of the even-valued terms.
	 * 
	 * @param input
	 * @return
	 */
	public static int problemTwo(int input) {

		int answer = 0;
		int[] evenFibArray = Utilities.findEvens(FibonacciUtils.generateFibonacciMaxValueUnder(input));

		for (int each : evenFibArray)
			answer += each;

		return answer;
	}

	/**
	 * The prime factors of 13195 are 5, 7, 13 and 29.
	 * 
	 * What is the largest prime factor of the number 600851475143 ?
	 * 
	 * @param input
	 * @return
	 */
	public static int problemThree(long input) {

		return 0;
	}

}
